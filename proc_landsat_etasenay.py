#!/usr/bin/python
# -*- coding: utf-8 -*-

import wx
import wx.lib.filebrowsebutton as filebrowse
import os

# For icons, pngs, etc coming from images.py
from wx import ImageFromStream, BitmapFromImage, EmptyIcon
import cStringIO
import images

# For Image Processing
import numpy
from osgeo import gdal_array
from osgeo import gdal
from osgeo.gdalconst import *
import gdal_merge as g_m
from GDAL_functions import *
import math

# Get Remote Sensing functions
from RS import *

#Define metadata list
metadata = []

# Define satellite bands
# Based on Landsat channels
inputFile = []

# Define output base file name
output = ''

# Define vegetation indices types
chosen_tempk_band = 'Band61'
proc_type = ['Band61','Band62']

# Define Info Message
overview = """This module is a ET actual Senay method claculation for Landsat 7. It corrects every band (1,2,3,4,5,6L,6H,7,8Pan) from DN to either reflectance at top of Atmosphere or Kinetic Temperature. Then it calculates the necessary things for a potential ET according to diurnal incoming solar radiation. 

Only one output: ET actual (Senay, 2007)

Generally, after downloading L7ETM+, the bands are in gz format.
Run this shell command: "for file in *.gz; do gzip -d $file; done"
then run this GRASS module: "for file in *.tif; do r.in.gdal input=$file output=$file title=Landsat7ETM$file ; done"
Finally run this GIPE module using metfile.met and base_ouput_name

Parameters:
-----------
metfile=string
Landsat 7ETM+ Header File (.met)

tsw=float //Single-way transmissivity of the atmosphere [0.0-1.0]
Default: 0.7

roh_w=float //Density of water (~1000 g/m3)
Default: 1010.0

tempk_band=[Band61,Band62] //Name of Temperature Band
Default: Band61

output=string //ETa Senay output layer name"""

class MyFrame(wx.Frame):
	def __init__(self,parent, id=-1, title='ETa Senay for Landsat image from .met metadata file',
			pos=(0,0),
			size=(500,400),
			style=wx.DEFAULT_FRAME_STYLE):
		wx.Frame.__init__(self, parent, id, title, pos, size, style)
		ico = images.getPngGipeIcon()
		self.SetIcon(ico)
		self.lognull = wx.LogNull()
		self.metadata = metadata
		# Input Filenames
		self.inputFile = inputFile
		self.output = output
		# Pre-Processing types
		self.proc_type = proc_type
		self.chosen_tempk_band = chosen_tempk_band
		# Construct Interface
		self.make_text()
		self.make_buttons()
		self.make_radiobuttons()
		self.make_options()
		self.make_fb()
		self.mbox = wx.BoxSizer(wx.VERTICAL)
		self.mbox.Add((10,20))
		self.mbox.Add(self.text, 1, wx.EXPAND|wx.CENTER, 10)
		self.mbox.Add((10,20))
		self.mbox.Add((10,10))
		self.mbox.Add(self.cc0, 1, wx.EXPAND, 10)
		self.mbox.Add(self.cc1, 1, wx.EXPAND, 10)
		self.mbox.Add((10,10))
		self.mbox.Add(self.optbox,1,wx.EXPAND,10)
		self.mbox.Add((10,30))
		self.mbox.Add(self.rbox, 1, wx.EXPAND, 0)
		self.mbox.Add((10,20))
		self.mbox.Add((10,10))
		self.mbox.Add(self.bbox, 1, wx.CENTER, 10)
		self.mbox.Add((10,10))
		self.SetSizer(self.mbox)
		self.bindEvents()
	
	# Process Equations, Handling and saving of output
	def OnOK(self,event):
		print "in: ", self.inputFile, " out:", self.output
		if(self.inputFile==''):
			self.OnFileInError()
		else:
			self.metadata = read_met_file_landsat7(self.inputFile)
		# Process Thread 1
		self.band1 = gdal_array.LoadFile(self.metadata[0])
		self.Lmin = self.metadata[9]
		self.LMax = self.metadata[18]
		self.Qcalmin = self.metadata[27]
		self.QcalMax = self.metadata[36]
		self.result1 = dn2rad_landsat7( self.Lmin, self.LMax, self.QcalMax, self.Qcalmin, self.band1 )
		del self.band1 #Free Memory
		self.doy = date2doy(self.metadata[50],self.metadata[49],self.metadata[48])
		self.kexo = kexo(self.metadata[52],self.metadata[51],"band1")
		self.result1 = rad2ref_landsat7( self.result1, self.doy, self.metadata[46], self.kexo )
		# End of Process Thread 1
		# Process Thread 2
		self.band2 = gdal_array.LoadFile(self.metadata[1])
		self.Lmin = self.metadata[10]
		self.LMax = self.metadata[19]
		self.Qcalmin = self.metadata[28]
		self.QcalMax = self.metadata[37]
		self.result2 = dn2rad_landsat7( self.Lmin, self.LMax, self.QcalMax, self.Qcalmin, self.band2 )
		del self.band2 #Free Memory
		self.doy = date2doy(self.metadata[50],self.metadata[49],self.metadata[48])
		self.kexo = kexo(self.metadata[52],self.metadata[51],"band2")
		self.result2 = rad2ref_landsat7( self.result2, self.doy, self.metadata[46], self.kexo )
		# End of Process Thread 2
		# Process Thread 3
		self.band3 = gdal_array.LoadFile(self.metadata[2])
		self.Lmin = self.metadata[11]
		self.LMax = self.metadata[20]
		self.Qcalmin = self.metadata[29]
		self.QcalMax = self.metadata[38]
		self.result3 = dn2rad_landsat7( self.Lmin, self.LMax, self.QcalMax, self.Qcalmin, self.band3 )
		del self.band3 #Free Memory
		self.doy = date2doy(self.metadata[50],self.metadata[49],self.metadata[48])
		self.kexo = kexo(self.metadata[52],self.metadata[51],"band3")
		self.result3 = rad2ref_landsat7( self.result3, self.doy, self.metadata[46], self.kexo )
		# End of Process Thread 3
		# Process Thread 4
		self.band4 = gdal_array.LoadFile(self.metadata[3])
		self.Lmin = self.metadata[12]
		self.LMax = self.metadata[21]
		self.Qcalmin = self.metadata[30]
		self.QcalMax = self.metadata[39]
		self.result4 = dn2rad_landsat7( self.Lmin, self.LMax, self.QcalMax, self.Qcalmin, self.band4 )
		del self.band4 #Free Memory
		self.doy = date2doy(self.metadata[50],self.metadata[49],self.metadata[48])
		self.kexo = kexo(self.metadata[52],self.metadata[51],"band4")
		self.result4 = rad2ref_landsat7( self.result4, self.doy, self.metadata[46], self.kexo )
		# End of Process Thread 4
		# Process Thread 5
		self.band5 = gdal_array.LoadFile(self.metadata[4])
		self.Lmin = self.metadata[13]
		self.LMax = self.metadata[22]
		self.Qcalmin = self.metadata[31]
		self.QcalMax = self.metadata[40]
		self.result5 = dn2rad_landsat7( self.Lmin, self.LMax, self.QcalMax, self.Qcalmin, self.band5 )
		del self.band5 #Free Memory
		self.doy = date2doy(self.metadata[50],self.metadata[49],self.metadata[48])
		self.kexo = kexo(self.metadata[52],self.metadata[51],"band5")
		self.result5 = rad2ref_landsat7( self.result5, self.doy, self.metadata[46], self.kexo )
		# End of Process Thread 5
		# Process Thread 6
		if(chosen_tempk_band=='Band61'):
			self.band61 = gdal_array.LoadFile(self.metadata[5])
			self.Lmin = self.metadata[14]
			self.LMax = self.metadata[23]
			self.Qcalmin = self.metadata[32]
			self.QcalMax = self.metadata[41]
			self.result6 = tempk_landsat7( self.band61 )
			del self.band61 #Free Memory
		else:
			# Process Thread 7
			self.band62 = gdal_array.LoadFile(self.metadata[6])
			self.Lmin = self.metadata[15]
			self.LMax = self.metadata[24]
			self.Qcalmin = self.metadata[33]
			self.QcalMax = self.metadata[42]
			self.result6 = tempk_landsat7( self.band62 )
			del self.band62 #Free Memory
		# End of Process Thread 6
		# Process Thread 7
		self.band7 = gdal_array.LoadFile(self.metadata[7])
		self.Lmin = self.metadata[16]
		self.LMax = self.metadata[25]
		self.Qcalmin = self.metadata[34]
		self.QcalMax = self.metadata[43]
		self.result7 = dn2rad_landsat7( self.Lmin, self.LMax, self.QcalMax, self.Qcalmin, self.band7 )
		#del self.band7 #Free Memory
		self.doy = date2doy(self.metadata[50],self.metadata[49],self.metadata[48])
		self.kexo = kexo(self.metadata[52],self.metadata[51],"band7")
		self.result7 = rad2ref_landsat7( self.result7, self.doy, self.metadata[46], self.kexo )
		# End of Process Thread 7
		
		self.albedo=albedo_landsat( self.result1, self.result2, self.result3, self.result4, self.result5, self.result7 )
		del self.result1 #Free Memory
		del self.result2 #Free Memory
		del self.result5 #Free Memory
		del self.result7 #Free Memory
		self.ndvi=vi.ndvi(self.result3,self.result4)
		del self.result3 #Free Memory
		del self.result4 #Free Memory
		
		# Process Latitude Thread 8
		self.latitude=14.0 #dummy latitude for the time being
		indataset = gdal.Open(self.metadata[0], GA_ReadOnly)
		geomatrix = indataset.GetGeoTransform()
		X = geomatrix[0] + geomatrix[1] * pixel + geomatrix[2] * line
		Y = geomatrix[3] + geomatrix[4] * pixel + geomatrix[5] * line
		srs = osr.SpatialReference()
		srs.ImportFromWkt(indataset.GetProjection())
		srsLatLong = srs.CloneGeogCS()
		ct = osr.CoordinateTransformation(srs, srsLatLong)
		(self.longitude, self.latitude, self.height) = ct.TransformPoint(X, Y)
		del indataset
		# End of Process Latitude Thread 8
		self.solar_day=et_pot_rs.solarday(self.latitude,self.doy,self.tsw)
		self.rnet_day=et_pot_rs.rnetday(self.albedo,self.solar_day,self.tsw)
		# Process minmax temperature Thread 9
		(self.t_hot,self.t_cold) = minmax(self.result6)
		# End of Process minmax temperature Thread 9
		self.evapfr=eb.evapfr_senay(self.result6,self.t_cold,self.t_hot)
		self.eta=eb.eta(self.rnet_day,self.evapfr,self.result6)
		self.out = self.output+"eta_senay"
		SaveArrayWithGeo(self.eta,self.band7,self.out,'GTiff')
		self.Destroy()
	
	def OnFileInError(self):
		dlg = wx.MessageDialog(self, 
				'Minimum files to add:\n\n  Input file => .met\n  One Output file',
				'Error',wx.OK | wx.ICON_INFORMATION)
		dlg.ShowModal()
		dlg.Destroy()
		
	# Path+filename seek and set
	def make_fb(self):
		# get current working directory
		self.dirnm = os.getcwd()
		self.cc0 = filebrowse.FileBrowseButton(
			self, -1, size=(50, -1), labelText='.met File:',
			startDirectory = self.dirnm,
			fileMask='*.met',
			fileMode=wx.OPEN,
			changeCallback = self.fbbCallback0,
		    	)
		self.cc1 = filebrowse.FileBrowseButton(
			self, -1, size=(50, -1), labelText='out File: ',
			startDirectory = self.dirnm,
			fileMask='*.tif',
			fileMode=wx.SAVE,
			changeCallback = self.fbbCallback1
		    	)
	# Collect path+filenames
	def fbbCallback0(self, evt):
		 self.inputFile = evt.GetString()
	
	def fbbCallback1(self, evt):
		 self.output = evt.GetString()
		# Front text
	def make_text(self):
		self.text = wx.StaticText(self, -1, "ET actual Senay (2007) for Landsat7ETM+ using gdal and numeric")
	# Output format radio buttons
	def make_radiobuttons(self):
		self.rbox = wx.BoxSizer(wx.HORIZONTAL)
		self.rb = wx.RadioBox(self, -1, "Select Band for Temperature", 
			wx.DefaultPosition, wx.DefaultSize,
			self.proc_type, 5, wx.RA_SPECIFY_COLS)
		self.rb.SetToolTip(wx.ToolTip("Select Band for Temperature"))
		self.rb.SetLabel("Temperature Band")
		self.rbox.Add(self.rb,1,wx.ALL,10)
		
	def EvtRadioBox(self, evt):
		self.nb = evt.GetInt()
		self.chosen_tempk_band = self.proc_type[self.nb]
		print self.chosen_tempk_band

	def make_options(self):
		self.optbox = wx.BoxSizer(wx.VERTICAL)
		self.optbox0 = wx.BoxSizer(wx.HORIZONTAL)
		self.txt_tsw = wx.StaticText(self, -1, "Single-Way Transmissivity:")
		self.tsw = wx.TextCtrl(self, -1, "0.7", size=wx.DefaultSize)
		self.optbox0.Add(self.txt_tsw,1,wx.ALL,-1)
		self.optbox0.Add(self.tsw,1,wx.ALL,-1)
		self.optbox1 = wx.BoxSizer(wx.HORIZONTAL)
		self.txt_roh_w = wx.StaticText(self, -1, "Density of Water:")
		self.roh_w = wx.TextCtrl(self, -1, "1010.0", size=wx.DefaultSize)
		self.optbox1.Add(self.txt_roh_w,1,wx.ALL,-1)
		self.optbox1.Add(self.roh_w,1,wx.ALL,-1)
		self.optbox.Add(self.optbox0,1,wx.EXPAND,-1)
		self.optbox.Add((10,20))
		self.optbox.Add(self.optbox1,1,wx.EXPAND,-1)
		
		
	
	# Bottom buttons	
	def make_buttons(self):
		self.bbox = wx.BoxSizer(wx.HORIZONTAL)
		# OnOK
		bmp0 = wx.Bitmap("icons/dialog-ok-apply.png",wx.BITMAP_TYPE_PNG)
		self.b0 = wx.BitmapButton(self, 20, bmp0, (20, 20),
                       (bmp0.GetWidth()+50,bmp0.GetHeight()+10), style=wx.NO_BORDER)
        	self.b0.SetToolTipString("Process")
		self.bbox.Add(self.b0,1,wx.CENTER,10)
		# OnCancel
		bmp1 = wx.Bitmap("icons/dialog-cancel.png",wx.BITMAP_TYPE_PNG)
		self.b1 = wx.BitmapButton(self, 30, bmp1,(20, 20),
			(bmp1.GetWidth()+50,bmp1.GetHeight()+10), style=wx.NO_BORDER)
		self.b1.SetToolTipString("Abort")
		self.bbox.Add(self.b1,1,wx.CENTER,10)
		# OnInfo 
		bmp2 = wx.Bitmap("icons/help-about.png",wx.BITMAP_TYPE_PNG)
		self.b2 = wx.BitmapButton(self, 40, bmp2, (20, 20),
			(bmp2.GetWidth()+50,bmp2.GetHeight()+10), style=wx.NO_BORDER)
        	self.b2.SetToolTipString("Help/Info.")
		self.bbox.Add(self.b2,1,wx.CENTER,10)


	def bindEvents(self):
		self.Bind(wx.EVT_CLOSE, self.OnCloseWindow)
        	self.Bind(wx.EVT_BUTTON, self.OnOK, self.b0)
		self.Bind(wx.EVT_BUTTON, self.OnCancel, self.b1)
		self.Bind(wx.EVT_BUTTON, self.OnInfo, self.b2)
		self.Bind(wx.EVT_RADIOBOX, self.EvtRadioBox, self.rb)
		
	def OnCloseWindow(self, event):
		self.Destroy()

	def OnCancel(self, event):
		self.Destroy()
	
	def OnInfo(self,event):
		dlg = wx.MessageDialog(self, overview,
			'Help', wx.OK | wx.ICON_INFORMATION
			)
		dlg.ShowModal()
		dlg.Destroy()
#----------------------------------------------------------------------
def getPngGipeData():
	return \
'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00 \x00\x00\x00 \x08\x06\x00\
\x00\x00szz\xf4\x00\x00\x00\x04sBIT\x08\x08\x08\x08|\x08d\x88\x00\x00\x07[ID\
ATX\x85\xed\x97\x7fp\x15\xd5\x15\xc7?ww_^B\x02H \xcd\x0fBH\x94RMl\x19PI\x07\
\x14\xd1:\x03\x08BPl\x10\xa2\xa5T\xa6tZ:\x12~Ti\xedL\x9d\xe2\x8f\xda\xcaX\
\x91\xcaT\xaa\x08\xb6\x9d\xb6\x06\n\xd8V\x8a\xa6\x08\x81\n\x85RI\x84\x04\x0c\
\x89\x84@^\xf2\xf2\xf2~\xe5\xbd}\xbb{o\xff\xd8\xc7K\x80P\xfe\xe9\x0c\xfd\xa3\
g\xe6\xcc\xdd=\xf7\xde\xdd\xef\xf9\xde{\xce\xbdG(\xa5\xb8\x9e\xa2]\xd7\xbf\
\xff/\x00\x10\x97\x1b\xca\x8a\x19Z\xf491\xca\xb2\xf0 p!\x1a\xc2m\xf5\xa4j\
\xa2\x0f\xba\x02, \xa1 \x01\x98\xc9wSA\x1c\n\xd2\xb5!F\x86\xe0x@\xb6\x1e\xee\
\x90-W\x05\x903\x14\xef\x8f\x9f\x1c\xb3\xbar\xfe\xdd\xdf\x18jD\xf2\x88\x85\
\x04\x86\x80\x0c\xc0+ \r0\x92\xaai \xfaaO(\x88J\x08\x00>\xa0\x1b\xf0)h\x03\
\x840\xc8\xb21\xfd\xa7\x82\xbfk\xe8\xf8\xd3\x0fjc\xcf|\x16\x90M\x97\x00\x18\
\x96\x85\xb1c\xcb]o\xdeY\xf1\xcb\x85\x90\x0er\x17\xc4:@\xd7!} \xa2D\xca\xd6\
\xde\x1e\xa6\xa0 \xcb\xa5"\x0e\xf8q\x81t+\xb8\x00(\r\xf4^h=\x88\xea=\xc1\xce\
\x96h\xd3\xe3\xbf\x8f=\xd4\x19\x96\xf5$\xfd\xe1;\x8f\r\x7f\xec\xce\x8ag\x17B\
1\xb0\x1b:>\x85h\x08\x0c\xcd\x05\x90!\xc0\xdb\xc7\x80\x94\xa0i\x82\x8d\x1b?\
\xc1\xef\x9f\xce\x07\xefo`O\xcdL\x94_!\x02\xc2\x05\xe0\xef\x0f \x8a\x1d\x8e\
\xd0\x93\x80q#\x8d\xb1\xf3o\xf7<\xffJ\xad9\x1f\x88\x88Ai\x18\x9f|8\xabnt\xf9\
O\'B3\xf8\xf7C\xf3\xc7\x10\x8f\xf6\x03\x80\x0b\xc0\x9b|N\xd7\xe8\x08\x98\x94\
O>BKs\x0f\xb7\xddQ\xce\xe2\x19\x11\xbe=cT\x1f\x03]@;\xa0\x04\xd2\x1b\'j\x9d\
\'\xac\xf5\x10\xd1m>\xea\xb0\xece\xbf\x8d\xcd\x0c\xf6\xaa\xddZY\xb1\xc8+*\
\x1cV\x06\r\x109\ng\x9b\xb0\xfd\xe7\x89\x07\xbb\x88\x07;\xaf\xd0\xden\x1f{\
\xdfoa\xd2]\xad\xd4\xd5\x9d\xa0\xbe\xb1\x81C\x87\x0e\xd0\x18\x9a\xc6\xdcU\
\x87\x89\xf5\xf8\xdc\xb1=I\r\xf80#\x01,\xc7\xc2v\x14\t[1\xd8+\x8c\xc2a\xdaD@\
\xd3\xb2\xb3\xc4\x08\x11\x0fz0OBg\x1bDz\xb0\xed\x04\nPJ]\xa1B\xc0\x0f\x9fk\
\xe7\x89\xeaj22=\x08\xa1hni\xe6\xfbkVS\xef\xcb\x01\xc0qd\xdf\x1c\xa9\x00\r\
\xa5\xc0\x91\x12K\x82T0(\x8d\x1c\xc0\xab9R\t,\x0b\x12\t\xb0mPj\xa0\xe8D)\x85\
\x94n\xd6\x1c\x9ew\x1f\xa5e_\xc0q\x14C\x07g\x93\x9f[@\xdc4\xa9^\xb9\x9c\xda\
\x86\x08\x9a&p\xa4\x0b\xa0\x7f\xac)uQ\x15*\x19\xd0n4\x0b\xd1\xa7\x03\x88\x94\
\n\xd1\xaf/\x1e\xaa\xe5\xc1\xd9\xf73w\xce<F\xe6\x17\xb0}\xfb\x1f)\x9fX\xce\
\xaf\xd7\x7f\x8f\xa9\xa5\x99\x00\xe8\x9a\xb8d\xce\xd5\xe4\x9a\x99\xf0\xa2\
\xd7\xben;e{gs\tG\x0f\x96\x92\x99q\x9c\xd77\xbd\xc1\xaa\x15\xcb\xd8\xb0*\x8b\
\xdd\xcf\xdf\x98\xfai[\xc8\xe2d\x8f\xe92\xf7\x1f\xce\x9bk\x02\xf8\xcd\x9e\
\x1eVl\x9d\xcc\xb6\x86%\xdc[\xd5\x9c\xb2\xe7\xe7\xe9l\xab\xb9\x91\xaa\xd9\
\x1bh\xde[\xc2\xf4I\x83S}\x7fi\x08\xb1\xe0`\x16\xda\xd3o\xf3\xa5mM\xfc\xad-\
\xea:3\x00\x90\x01\x01H\xa98s\xc1b\xce\xd3g\xf8IM\x06\xaf\xbe\xfa2\x8fV-\xc0\
\x1f\xcd\xe7\x83\xbaHjI\xc2\x11\xc9\xec\xcaO\xf9\xd1\xcb\xe7\tEej\xfek\xfb\
\xfcTT\xcc\xa1\xf4\x8b\xa5<\xb5n=\x8b\x0fD\xf9\xee_\xfdhBp\xf9\xe9k\x0c\x04\
\xe0\xabk[y\xfe\xf5}\xec\xfc\xdaM\xb4\x9dk\xa3\xab\xd3\x8fax8\xd5\xd4\xc8\
\x1bonF\xd3~\xce\xb1\x8f{\xa9\\\x14\xa3\xbe\xbe\x19\xe9@y\xf9d\xde^f\xb1dS&G\
\xea\x03\x84"a:.\xf8\xb8\xfd\xcb\x138r\xf4\x10#\xf3\n\x19]R\xc2\xecQ>\xee\
\xb9U\xbf:\x03R\xc2\xf9n\x8b\x92\xe2"\x12f\x1c\xd3\x8c\xe3H\x07)]\x0f#\x910\
\x00\x8e\x03\x1e\xc3@\x08\rp0\x0c\x9d\x84\xad8\xdf\xdeF\xdd\x81\x83x\xd3\xd2\
P\x80\xa6i\x0c\xce\xcc\xc2\xb2-\x1c\xcbdD\xe6\xa5\x1b\xf3\n\x00\x9a\x06\xfb_\
\x1a\xc3\xc9\xb7\xca\xa9\x98RL\xd5\x82Edee\x10\x8e\x04(\x1cU\xc4p\xed%\x1cGq\
\xdb\xf8A\xd4\xee\xc9\xe4+SF\xb1\xf2\x9b\xa5\xbc\xfb\x02\x8c\x1f\x93\xc1\x99\
\x17\xf3y\xadz6K\x97~\x8b\xc2\xdc|\x9e[\xfb"\xe3\x8b\x0b\xd92\xb7\x90}\x95\t\
\x1e(\xf3\\{\t\x00JG{\xd9\xb5\xb6\x84\x9a\xbfw\xb3|\xf9jn\xb9\xe5f\xd2\xf5.\
\xee\xbfw,\xba.\x90R1b\x84\xce\xde?\x8f\x85\x80Bu;\xeeY\x80\xe0\xe1\t7\xb0b\
\xcf~\x9eyv-\x05\xff\xda\xc3G\x8f\xdc\x84\xe6\r\x13PA\x84v)\x03\x03\x02\x10B\
\xa0p7K\xc5\x94!<\x98\xf9\x0f\xc2\xf6!\x96\xee\x1a\x8b\xee\x158\x8e\xe2\xe8?\
M\x9eX\xfd\x19?[\xb7\x93\xaa\xaa\x85\xaczD\xe7\xf1)\xc3\xd1\x81i\xa5\x83\x99\
\x96\x03\xb4nGN\xc8E\xf3\x08z\x01M\x08\xe0\xd2Mx\xcd0\xd44\xd7\xdb\xc1\x99Z*\
OM\xbc\xaf\x91Y\x0f\x9d\xe5\xe6\xb29L\xbd{*[\xde\xda\xc2\xa6\xf7\xb2\x19\xb7\
\xb4\t\xd3r\xf7\xca\xc5T\xac]#\x19\x19B \xfa\xb2\xe0\xc0\x83\xb5\xcbh\x1b\
\x92=\x8eSu\x7f\xa0\xbb;Hk[\x0b\xb9\x05\xb9\xec\xaf\xab\xa5\xe6\x9d\x1d8\xce\
\xba\x14\x8b\\\xfeI\xd1\xd7${\xd1\x1cG\x98D\x83\x10\xec\x023\x02\xd2\x01\xe1\
\xa6\xd1\x94\xe2\xb6\xba\xee\x12\x96\x9f\xdd\xc8\xc6_\xfc\x8a\x91#\xf3\x88DC\
\x0c\xcaH\xc7\xdf\x15\xe0\xa9\'\xd7\x90\xe9u\x0f\x9e\x8bs\x84\x10\xa0\x14RId\
\xf2<\x89\xdb`K,\x00\xe3\xc4Yu.\xd4\xda\xda5\xc4N+ \xaep\xcc\x08\xb6\x1d\xc7\
vl\x84\x9e\x84\xab\x0b\xf7\x1e\x08(\x14k\xaa\x871o\xf1z*++\xd1\x84NQ\xd1h\
\x1e\xad\xfa:3\xc6\xc5\x88\xc5z\xd1,\x01\x96t\xef\x87R =61=N\\SD\x95\xc2\x17\
\x92t\x86\xd59@\x1a\x17\x02\xaag\xc7\xbe\xee\xddU\xd3O/\x8a\xc5\xbc$\xac\x04\
\xd1X/\x96\xe3 t\xe1^0\xed\xe4\x8d(\rH\x87\xdc\x1c\x9d\xf7vx\x989\xe3V\x9aN\
\xf72\xf6\xf3\xa5T\xcf\xf31k\xba\x97pw\x0fD\x80\xb0r[\xa9P\x02\xa2^\x87\xb0\
\x0e\x9d\tE\x93Ov^\x08\xcac\x80\xa9\x034\xb6\xc9\xd6{\xca\x9c\xf9iF<=\x14\
\x8d\x13\x8e9\xc4\x12\x12\xd3\x96\x98Rb\xaad\xeb\xb8\x1a\xb3\x1c\x94\xae\xc8\
\xce\x11l\xdd\xda\x8e\x88\xefe\xc9\x03i\xc4\x82\x0e\x89\x88\xc4\x8cH\xcc\x90\
\x83\x19t\xbf\x11\xd7%!\xa5\xe8HHN\xf78l?no\xf6\x85U\r\x10Jm\x91I\xa5\xc6\
\xc3+\xe7z_)\x18\xae\xe5FM\x85\xed(7F\xbc\x80Ws\xbd\xf7\xf4{\xf7\xb86+\x0c\
\x9e\x98\x82\x90\x03A\\\r\x01\x01\t\x9d\x80\x03*\x13\xba\x85\xa2\xa9\xd7q\
\xde=mo;|\xd6y\x018\x96\xe4\xb6On\xc8\x14wL\x18\xa3We\x0f\xa1T(\xd2\x95 Y\
\x0b$\xeb\x00\x83d} @\xd7\xdc\xbeTM \xfb\xea\x02\x13\xb7.\xe8\x05\xa1@\x1a\
\xa8.\x1b\xff\xc9\x80\xfc\xb0#"w\x03\xa7pG\x0f\x18w\x06\x90\x9d\\\xf1\xff\
\xa6$\x80^ J\xbfl$\xfe_\x9c^o\x00\xff\x069\xfb\xa4\xd8\x1a\x9c\xff$\x00\x00\
\x00\x00IEND\xaeB`\x82' 
	
def getPngGipeBitmap():
	return BitmapFromImage(getPngGipeImage())

def getPngGipeImage():
	stream = cStringIO.StringIO(getPngGipeData())
	return ImageFromStream(stream)
def GetPngGipeIcon():
	icon = wx.EmptyIcon()
	icon.CopyFromBitmap(getPngGipeBitmap())
	return icon
#----------------------------------------------------------------------
def getPngHelpAboutData():
	return \
	'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00 \x00\x00\x00 \x08\x06\x00\
	\x00\x00szz\xf4\x00\x00\x00\x04sBIT\x08\x08\x08\x08|\x08d\x88\x00\x00\x05\
	\x7fIDATX\x85\xc5\x97_\x88\\\xd5\x1d\xc7?\xbfs\xee\xbd;3\xd9\xcc\xce\xea&\
	\x1acD\xb4,\x89\r\x06\x83\x95V\xc8\xae\xc4\xd8\x8a\xf1Utm\xa5\x08\xbe\xf8P\
	\xfa \x82\x14\xc2\x92\x97\xd2\x12\xf2R\x10\xa1\xd2\x07\xb1\x1a\x82\xb4E\x88\
	\xe0C\xbb\xe8\x06ZTL\x8c\x88MW\xf0OL\xcd\xdfn\xf6\xcfd\xee\xcc\xdc{\xcf\xcf\
	\x87{g\xe6\xde\x99\xc9f\xed\x8b\x17~\xdc9s\xce\xef\xfb\xfb\x9c\xdf\xf9{EU\
	\xf9>\x1f\xf3\xbdF\x07\xbc\xef\xd2Xf\xfer\x0f\xce<\x0e\xec\xc4\xc8v\x90\x9b\
	\x11i\x02!"\x0b \xc7\xc1\xcc\xe9k\x8f\xcc\xaf[s=C 3\x7f}\x125\xcf!\xb2\x1b\
	\xc0\xf7,\xb7\xdePf\xdbD\x19\x80\xaf\x17[\x9c]l\x129\x05\x04DN\xa1z\x88\x1f\
	\xbc\x7fDgg\xdd\xff\r O\xfcm\x12\x91\x97\x10\xb3\xb7Z\xf6\xd9\xbf\xfb&\xb6o\
	\x19\xe5\xa6Z\t#\xa4\xc1\xb2\x97S\xb8\xb0\xdc\xe6\xf4\xb9\xab\xbc\xf5\xf1eV\
	\xc2\x04\xc4\xcc\xe3\xf4)}e\xdf\x99\xef\x0c 3o\xee\xc1\x98c\xbe5\xd5\xa9\x1d\
	\x13<\xf8\xc3\x1b)\x05\xb6\x1btq\xb5M3\x8a\xb1\xc6`\xada\xa2:\x92\xf5\x1e\
	\x9a\x91\xe3\x1f\xff\xbe\xc2\xfc\x7f\x96\x89\x9c.\x81<\xa6\x7fz\xe0\xef\xeb\
	\x06\x90\x9f\xbf\xb5\x0f\xe1\xcd-\xb5Re\xe6\xfe\xad\xd4*\x1e\x88t\xeb/\\\tyz\
	z\x1b\xbbo\x1fC\x04>>\xb3\xca\xcb\xef|\xcd\xe6\xf1JG\x01\x04\x96\x1a1G\xde\
	\xbf\xc4\xb9\xe5\xa8\x01\xeea}y\xfa\xf8u\x01\xe4\x97\xc7n\xc3\xd9S\xd5\x8a_\
	\xfb\xc5\xfd\xb70Z\xf6z\xa2@\xec\x1c;\xb7Txzz[\xc1\xef\x8d\xf7\xce\xf3\xcf/\
	\xea\x04\x9e\xed\x8e\x0c\x08\xf5\x96\xe3\xcf\xef]d\xa5\xe9VP\xefG\xfa\xc7\
	\xfb\x16\xf2~\x85e(\x07\x0f\x1a\xf0_\r\x02\xbf\xb6\xff\x9e\xcd`\x0c\xf5\x96\
	\xa3\xde\xd2\xf4\xddv\x9c]l\xf1\xb3\xbb7\x0fd\xed\xa7wOp\xe6rH\xbd\xed\xa8\
	\xb753\x07"\xec\xdf5A\x10xU<}\xa9\xdf\xaf\xb8\x0f|\xf1\x93\x19\xc4NM\xef\xb8\
	\x01\xdf\xf3\xb2\xe0\xae \x8a\xb1\x9c\xf8ry\x00\xe0\xa3\xafV\x11\xcf\xe6\x82\
	\xf7\xcc\xb7\x96\xe9\xc91\x10\xbbW~\xf5\xe1\x93\xd7\x060\xde\xf3\xe3\x1b\x03\
	6\x96\x83\xb4\xd7C\xc4b\x0cG?\xb8H3\xea\xad\xae(Q^\xfb\xd79\xd4\xf8i\xbbV\
	\x07\x18\xea\x91R\x8f\x1c\x1b\xcb>\xe3\xa3\x01\x88y\xae\x90\xf5\xce\x1c\x90g\
	\xe6\xa6P\xf3\xee][7p\xebx)\x1bG\xc9\xb5\x14\xb25N\x9c8\\\xd4\xe6\xa1\x1d5|k\
	x\xfb\xd3+\xe0\x8d\xe0u\xc7_\xc8/\xd1\x8e\xdf\xd9\xa5\x88O/\xb4\xc0\xe9n\xfd\
	\xc3\xae\x93\x90\xdf\t\xc5\xdbk\x8cP\xad\x04i\xaa;\xb1\x07@\xb2\xcd\xc6\x968\
	\xb6\xd0\x04\x041ep@\xbb\xb3\x11\x01ho\xe5d\xe5j\xd9\xc7\x98\x18gx\x1c\xe8\
	\x03\xb0vO%\xb04"\xcd\xf58/\x08\x89K\x08\x9b\xad\xc1\xde\x01\xe5r\t\xeb\xd9"\
	\xe4\x90NTJ\x1e\xf5\xb6\xee\xec\x84\xcd\x9d\x05f\xb2\x1e\xc1g\x97"6U}<C\xae\
	\x07)T\x18\xb6\xf8\xe6\xf7\xf72\xec\xb9\xe5\x85\x93\x94G7\xe4\xe0\xa5\x90\
	\xb8\xd8\xc1\xa5\xab1a, f\xfb \x80\xb1eD\x08\x13\xe1\xecrL\xc9\xb7\x94\x03\
	\x8b5\xbdT\xb6\xe3\xa1\xb1S\xb8\x04\x92v?\xb4\x90\xa8\x10F\x8ef\x02N\r\xe9\
	\x1e.7\x0f\x03(u\xe8\x1dB#\x16\x1a\xb1\xc3Z\x83\x150V\x11\x19\xa1\xf4\xeb\
	\x0f\xd18\xa2\xf5\xe2\x8f\x8b\x00\xb1\xd0\x8e\xa4{.8\x84D!Q\x05L\n&\x9d\xacH\
	s\x08\x809\x0frg1}B\x92\t\x91d\xff{\x15H\x1a\x03\x19h9 \x81\xce\x8c\xefjH_9\
	\xad\x0f\x87\x00x\xa7\x81;\xf3\xcb\xa67\xd9\xfa\x04\x8c\x1d2\x08&\xfb\xbf\
	\xe3;\xc4\xafW^\xc8yu3\xf0\t\xc6\x80\xd8TH,\x98L\xd4\xf4\xfd\x96!\x17\xa9k\
	\xb5\x1d\xaey|\x10@\xe4h\xcfi\x8d\xe0\xc6\x16N\xc6\x9e\xbfI\xad\x10\xb0_\xa3\
	[\x9e\x1b\x00\xd0\xc3w\x9dD\xec\x89T\xc0\x14\x89\x0b\x82\x9dT\xaf\x95\x81\
	\xb5:\xe0\x9d\xd2\xd9M\xf3\x03\x00\x00X{x]"\xc3\x86\xa0\x0b}\x8d,H\xb6\x12p\
	\x87\n\xdc\xf9\x82\xfe\xee\x8e\xd71v\xae\x90\xae|\x16\x14h^\x85\xb8=\x08\x10\
	E\xd0\\\x05\xd5\xdc\xd8K\xdfp\xc9<:q\xa4\xc0=p!\xf9\xcd\x7f\'1\xfa\x01Hu`6\
	\x87+\xe8\xa1\xc9\xc1\xe0y\xff\x17>\x87\xca\xd8\xb0\xaa%\xd4\xec\xd2\xd9\xf1\
	\xc2\xfdp \x97\xfa\xdb\xad\x0b\x18\xfb(\xc64\xfa\x87\xc0\xf3\xae\xff\x1916"\
	\xf8\x83\xcd\x1a(\x8f\xf5\x07\x87!\x19\xe8V\x1c\xbc\xb8\x0f\x957\x10\xa9\x01\
	X#\xd4\xfc\x84R\xd2`4\x106\x06\xc2h\x00e_\x08\xa3\xf4\xec_m+\x91\xbf\x81\xa5\
	\xc8\xb0\x18vuW\x10\xf7\xa8\x1e\xd84p\x1f\\\x13 \x85\xb8r\x1b\xa2\xaf\x82N\
	\x01\x94<\xa1V\x12\xc6F\x84\xd1@(\xfb`EHT\t#\xf8_\xe8X\x0c\xd3\x8bK\xf6\x890\
	\x87\xd3guvb\xe1\x9a1\xae\xf7a"\x071\xc8\xe5\x190\xcf\x83\xee\x82tc3\x92Zg\
	\x9a\xc4.=\x03\xb2\xe7\x04\xa2\x87\xf5\xc0\xc4\xebk\x8a\xaf\x07\xa0\x08si\n\
	\x91\xbd\x88\xecA\x99\x04\xca@\t8\x0fr\x1a\xf4\x13\xc4\x1d\xd5\x03\x9bN\xae[\
	3\x0f "\x06\xf03\xf3ro\x0f\xb093\x99\xe5\xd7\x98\x92\xde\x8b:\xc7R\xc7\xe2\
	\xcc\xa2\xdc;RUG&\x8c\x88H&\xe8\x01A.\xb8\x9f\x95\xfbm$W/Y\xa0\x08h\x0f\xb1\
	\xa8\x0f\xd4\x01NDPU\xf7-\x11\x14@*\xd7Rh\xeb\x00\x00\x00\x00IEND\xaeB`\x82'
	
	
def getPngHelpAboutBitmap():
	return BitmapFromImage(getPngHelpAboutImage())

def getPngHelpAboutImage():
	stream = cStringIO.StringIO(getPngHelpAboutData())
	return ImageFromStream(stream)
	
#----------------------------------------------------------------------
def getPngDialogOKData():
	return \
	'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00 \x00\x00\x00 \x08\x06\x00\
	\x00\x00szz\xf4\x00\x00\x00\x04sBIT\x08\x08\x08\x08|\x08d\x88\x00\x00\x04iID\
	ATX\x85\xed\x96]L\x1cU\x14\xc7\xffwfXvg\xf6c\xb6\xbb3\xbb\x0b\xb8\x14(\x16**\
	E\x10h1-\x9a`c\xd3\xc4Jh\x1bM\x8di%\x11\xe3W+\x1841\xda\xd7J4>46\xa9"\xa6\
	\xd5\x10\xc5jE\x1e*\x04!\xb6\x92\xb4\xc6\xd4\xb4\xd6V\xd2V\xa1\xb2\x0bt\x81e\
	w\x96\x9d\xdd\xd9\xb9>\xe0\x03\x94\xafmc\xdbh8\xc9}\xb9s\xcf\xfd\xfd2\xe7\
	\xe4\xdeK(\xa5\xb8\x93\xc1\xdcQ\xfa\xb2\xc0\xb2\xc0\xad\x16\xe0\xf7\xf2;\xca\
	\x9b\xcb\xe35\x9f\xd5\x8c\x91\xa7\x88\xfd\xb6\n\xf0\r\xfcV\xc1+|\xba\xabp\
	\x17\x97\xeb\xcc\xb5s\xab\xb8K\xe4%b\xbd-\x02\xb6F\xdbf1Mlk,nd\x9c\x99N\x94\
	\xad-C\xf5\x9aj;\xb1\x92\xcbd\x1f\xe1g\xae\xe5\xfem\xb8\xf8\xbaXe\xf5X\x8f\
	\xd5\xdeS\xcb\xb82\\\x08\x87\xc2\x00\x80-%[\x10Q#\x8e\xce\x0b\x9dg\x01\xe4$%\
	@\xb6\x11\x96~N\x13\xc9\xc2\xedo\xd878\xdc\x8e\x8e\xed\xb9\xdbX\xb7\xc7\x85p\
	8<\xeb{\x81\xa3\x00c\xf2\x98{\xe6\xdc\xbc\x02|#\xef\xcdX\x91q\xbeaw\x03\xef\
	\xa8w\xec\t4\x05\xde_\n.\xbf"W\xb82]]\x9b\xb3\x1f\xe5dYB8\x12\x02\xd5\x01P\
	\x80R`\xd8?\x8c\x83\'\x0f\xd2\xf0D\xb8if\xde\x9c\x1e\xe0\xeb\xf8t\x8b\xc9r\
	\xbe\xdc["\x88)&\x92\xe6\xf5\xbc\xe7z\xd5U\xb7\x18\xdcS\xef)\x91W\xca\xddU\
	\xd9\x1b9\xa7\xd3\x01E\r!\x12U\x10\x89*P\xa6\xc2\x18\xf5\r\xa3\xa5\xa7\x05\
	\x91\xd1H\x13\xfd\x90\xbe53\x97\xcc\xbc\x8c,u\x16\xd9\xe04\\z$g\x9d9\xdf[\
	\x00\x9d$\x10\x9dR\xd0\xf5\xfbI\xea\x1b\xf0\xd7\xfa\xdf\xf5\x7ft=<\xfd\xb5\
	\xf4"\xa7\xd3\xd9W\xb1z\xadA\xb2\xbb\x91H\xe8\xa0:@u\n\xaa\x03$Jq\xb8\xbb\
	\x15\xfe\xc0\xc8\x81\xd8\x91\xd8\x0b\xd7\xe7\xcf\xfa\x03F\x9b\xf1\xe7\x8a\
	\xcc"s\x96\x9c\x05E\x9d\x84\x1aW\xc0\x18\x08\x1e\xce-"\xe9\x1e\xcf\xa1\xb4=i\
	;g\xaew\xefu\xdf\xeb\xb49\xfb\xd6\xe5\xae1\x88V\x1b\xa6\xe2a\xa8q\x05j\\A4\
	\x16A\x8aF\xf0E\xf7Q\x0c\x07F\x9b\xe7\x83\xcf\x11p\n\x0e\x8bl\xb2#\x14\x9d\
	\x86G\xe3\nTM\x81n\xa0x(?\x9f\xc8+\xa4\x16\xf7\x8b\xee\xed\x00 =/\xad\x96\
	\xcc\xd2\xe9\xb2\xbc\x1c\x83Y\xe4\x11\xd1&\xa1j\nT-\x82h\\\x81\xc8\xf2\xf8\
	\xaa\xb3\x1d\x83\xa3\xbeV\xf5\x88\xba{\xa1\xf2\xcd*\x81\xf1\x19c\x9d$\xd9\
	\x0fl,\xb8\x9f\x98,V0\x1c\xc0p\x04\x84\x05\x08\x030j\x1c\xbd\xa7\xfa\xf5\x91\
	\xc0\xb5\x97E\x8b\xf8\xce\xfa\xa2\x1c\xa3E2C\xd3(t\x1d\xa0:\xa0k@\xa6\xd1\
	\x8bc\x1d\x9d8{\xb5\xffk\xa5M\xd9\xba\x10|\x8e\x00\x00\xf0;\xf9z\xd9a\xdf\
	\xbf\xa18\x9f0B*\x18\x8eL\x8b\xb0\x00a\x01vJ\xc7\x89\x1f\x06Q\\\xe8\x86\xc9\
	\xcdC\xd3uP\x9dBO\x00\x02k\x8175\x0b\xed\xed\xdf\xe3\xa7+\xe7\x8e\x87\xdaB\
	\x9b\x16\x83\xcf+\x00\x00\xc2\x93\xc2\xbetQzs\xfd\x86\x95$\xc13`9\x02\xc2M\
	\x0bp\x0c\x81\x8d\x1aA\x8d\xa9\xd0\x12:\xe2\xf18\x12\xb1\x18b1\r\xb1\xa0\x82\
	\xf3=\x13\xe8\x1f\xf3\xf5L\x1e\x9d\xac\\\n\xbe\xa0\x00\x00\x98w\x98\xf7\xdfe\
	\x96\x1b\x1e\xa8t \x98:\x0e&\x05`9\x80e\x19\xa8\t\x05S\xba\x02=\xa1\x83&\x80\
	\x84Fa\x8b\x89\x18\xe9\x15\xf0\xdb\x88\xefT\xf0\x9b`i2\xf0E\x05\x00\xc0\xf2\
	\xb8\xe5\x83L\x9b\xfc\\^\x150n\x1e\x05k\x98.\x07a\x08\x08\x00J)t\r\xb0F\xad\
	\x18\xfaV\xc0\xaf>\xff/\x13\x1d\x13\x85\xc9\xc2\x97\x14\x00\x00\xf3c\xe6O\
	\xb2\xed\xae\xa7\xef\xab!\x18\xb7_\x03\xcb\x01\x84%\x00\x99n:K\xc4\x8a\xab\
	\xad<\xce\xfc1t1\xd8\x19\xcc\xbb\x11xR\x02\x00 T\t_\xe6\xda\xddO<\xf8,\x87\
	\x804\n\xe6\x9f\x03\xdc\xa6\xd8p\xa5\xd9\x88\xd3\x17\xff\xba<\xd93\x99\xb3\
	\xf8.\xf3GR\xd7\xb1\xf2\x9dR\xdd\x1f\xf0\x1f?\xf7\xb1\x8et\xd5\x03\x83@ \xb1\
	"\x06\x0e\x9bp\xea\xc2\xd5\xc1\x9b\x85\'-\x00\x00J\x97\xb2\xa9\x7fl\xe4\xc4\
	\x85f\x1dw\x07W\xe1\xcfC\xa9\xf8\xf1\xcc\x80?\xd4\x1b\xf2\xde,\x1c\xc0t#%?\
	\xdef\xac\x95|\x9f\xa7\xd4AM\xa5\xa6\xa1\x1b\xcb\x9d\x7f$\xd5\x03\xb72\xfe\
	\xdf\xaf\xe2e\x81\xff\x84\xc0\xdf\x83\xc2\n\xda\xfd\xbc\xa1\xc4\x00\x00\x00\
	\x00IEND\xaeB`\x82' 
	
def getPngDialogOKBitmap():
	return BitmapFromImage(getPngDialogOKImage())

def getPngDialogOKImage():
	stream = cStringIO.StringIO(getPngDialogOKData())
	return ImageFromStream(stream)
	
#----------------------------------------------------------------------
def getPngDialogCancelData():
	return \
	'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00 \x00\x00\x00 \x08\x06\x00\
	\x00\x00szz\xf4\x00\x00\x00\x04sBIT\x08\x08\x08\x08|\x08d\x88\x00\x00\x08NID\
	ATX\x85\xcd\x97Yl\\\xd5\x19\xc7\x7f\xe7\xdeY\xee\x8cg\xec\xf1x\xc6\xdbX\xb6\
	\xb3\x10\xa7N\xe3RA\x1cH\x80H\x04JJ\xda\x92\x86\x97\x14LH\xa9\x8a\xfa@%$\xd2\
	VE*\xaa\x90\xfa\xd0V\xa2\xeaF+\xd1J\xa4\xa5\rIH(j\xaaP\xc0\x8eI\x9c\x06\x12\
	\'8\xc4Yll\xc7\x9e\x8c\xf7\xf12\xf6lw\xeer\xfa0\xb6q\xa28\x84\xa7\xf6H\x9ft\
	\x1f\xce\xfd~\xffo9\xdf=\x17\xfe\xc7K|\x9e\xcd\xbb\x80m\xe5\xe5%\x95\x8d\x8d\
	w\x17\xae][\xe7\xab\xaf\x0f\xb9\xc2a7R\xce\xa6\xfb\xfb\xfb\xa7;;;\xde{\xf5\
	\xd5\x8fw\xcf\xceZ\xb7\xea\xd3q+\x9b\xfe\x04\xaeRx\xcc[Y\xf9T\xf8\xc1\x077\
	\x14\xddq\x87\xea*-\xc5\xe1\xf7\xa3(\n(\n\x9e\xaa*T\x97\x8b\x87\xb2\xd9\xb1\
	\xbb\xcf\x9f\xdf?\xd5\xd3\xf3\xbb=\xf1x\xd7\x81\xcf\xf0}\xd3\x0c<\n\xe2q\xd8\
	\xa6\xf9|/\x95ny\xa86\xb8\xf1\x1e\x14\xa7\x13;\x97CJ\x89\x94\x12\xa4D\xdav\
	\xfe\x19p\x14\xfa\xc9D\xaf2\xf6\xc6\x01+\xd9\xd3\xfb\x97\x14\xfch\x07\x8c\
	\x7fn\x01\x7f\x06o\x00^\x0e\xdf\xb3\xe1\xc9\x8am\xdb\xc0&\x0f[dH\x1bi/\x12\
	\xb2H\x94\xd0\xdc\xa4/_b\xf4\xe0\xa1\xe1L*\xddt\x01Z~z\xab\x02^\x81@@U\x0f\
	\xd74\xed\xd8XT\xbf\x16\xdb0\x17\x00\xfa\xf4\x04\xc9\xcb\x97\xc9\xc4b\x98\
	\x89\x19\xa4e\xa2h\x1e\\\xe1\x10\x9e\xdaZ<\xd55\x80\xb2 FH\x8b\x91\xbd\x7f\
	\xcf\xcd\x0e\x8e\xecz\x11\xf6^\xf8,\x01/\x81V\xa1*o/\xffv\xd3\xa6\x82\xaaeH;\
	\x1fQvr\x8c\xb1\x96\x16\x12]=}\xa6-\x0f\xe6\xe0D\n\xaeX`x!\xa4\xc1\xedN\xd8\
	\xaa\x15\x16\xdc_\xb4\xeeN\xa7\x7fM\x03 \x90R\xa28\x04\xa3\x07\x0e\x18\x89\
	\xd8\xf0\xf6&8\xbc\xa4\x80\r\xc0\xd3\xf0\x9b\x9aG\xb6|\xbfx\xcd\x97\x17\xe0\
	\x93\xe7\xdb\x19~\xf7\xfd\xe1\x94a\xfe\xf88\xec}\rr7\xca\xdcv\x10\x9bak\x89S\
	}\xab\xf4\x91\xad\x8a\xab\xa4b\xa1$\x8a\x03\x86\xfe\xb6wzz&y\xe7w\xa1w\xfe\
	\x1du\xb1\x83\xe7\xe1\xbe\x92\xd5\xcb_.\xdb\xb8IX9\x13\xdb4\x19=u\x8cXs\xdb\
	\x7f\xa2\x96\xfd\xc0s\xd0\xf61,y\xc4\x9e\x85\x95~\x97c_\xf8\xa1\xfb\x03\x8e\
	\xe2r,3\xef\xc32M\xcc\x9c\x89wy\x95\x96\xbex\xf9\x0b\x06\xbc\xd6}\xbd\x80\
	\xcd \x1aTe\x7f\xcd7\xbfV%m\x15\xdb4\x99\xea\xed\xe4js\xdb\xe9n\xc9\x96\x9fA\
	|)0\xc0\xfe\xc6\xc6\xdb\xdcX-\xe1\x8d\xeb\xaa]\x81\xb2\x05\xf0b\xc3\xa5\x81\
	\x9d]\x11\x19\x9b<u\x18>\x81Es`+l*\xaa_\xde\x88\xd00u\x1d\xd3H\x12k=13$\xd9\
	\xf1KH\xdc\x0c\xfe\xf6\xae]\xab\xfc~o33\xb5U2-\xb1t}\xa1i-l\xf4\xd9Q\x1c\xde\
	R\x8cL\x06\xdf\x97\xd6\x12\xbf\xf0\xc9\x0f\xee\x96\x1c9\tRYT\x8b\'}+\x96afu\
	\x0c]g\xbc\xb3\x83DJ\xffE+\xf4\xdd\x0c\xde\xb2{w]i\xfd\xaa\x16\x97\x91\xac\
	\x12\xd3:\xe8\x9f\x9a0sL_:\xcb\xd8\xf1\xd3\xb6\xa1\xcf`\xe8:\x96t\xa1EB\xf7}\
	\x1dj\x01\x14\x80{A\x15^\xe7\x83N\x7f\x00C\xd71\x8c4\xe3\xdd}\xe9+\xf0\xc7\
	\xd6\x9b\xc0[_x\xa1\xae\xac~U\x8b\x12\xed\x8e\xc8\x81q\x84\xae#\xe6\xe0\x8a4\
	\x89\xf7u2t)\xfaz"k\xfe!=\x12\xc3\xcc\xe5\x98\x19\x1c\xa6p\xcdjE\x83\xaf,\
	\x08\xb8\x0b\xaa\xb4pa\xc4H[\x18\xbaNzz\x84\xd9Y\xfd\xfd\xf7ab\xc9\xb4?\xf7\
	\\]Im\xa4\xc5:{\xa2\xd2\xbat\x15\xa1\xeb(s\x02\x1c*\x0c\xc7\xba\x88v\xf6\xef\
	\xfb\x10\x9eL\xc1\xde\xf4D\x1cC\xcfbd\xb38K\x82HX\xbf\xd0\x03\x1a\xacT\n<\
	\x18\xd9|\xed\xd2S\x93\xe4$\xed\xe7\x97\x80\xbf\xb1sg]qY\xb0\x99\x0f[+\xed\
	\x8b1\x14)\x11\xf3\xc7\xad\xd0K\xefH/}\xe7\xae\xec?\x03;\x0fA\xee\x1b\xd0\
	\x11\x9cI\xe5\x82\xc1"WF\xb7\x88\x9e\xeb\xc0\x12\xac\\/\xe7\x04\xd8\x10\x94\
	\xaa\x829\xd7<\xb9l\x06\x03\x06o\x04\x7fe\xf3\xe6\xba\xc2b_\xb3\xd6y*B\xd7\
	\x08\xea\\\xb3\xd9R\xa2\x96\x14q1\xdeO\xd7G\xbd\x07\xce\xc0\xce\x7f\xce\xcd\
	\x8b1\xc8fr\xd6\xc4\x95\xb6\xa3\x15\xc9D\x0e\xad\xd8\x89TE\xb1mJ\xe1\x000@$g\
	\x12d\xa7\xbb\xf0z\xbd\x98"\x83q\x83)\xf9C!V\x19c\xb1\xe6\x92A"\xce\xfe\x04\
	\x8a\x10\x08\xa7\x13\x1c\x0el\x8f\x93\x8e\xc9\x01:\xdb{\x0et\xc0\x13\xff\x02\
	}\xfe=\x0b\xa4\t\xb8\xa4\x9d\xaf\xb9"0@X\xf3%\xd0aZ\xcf\xe9$\x86\xaf\x92\x02\
	<\x15\x1a6D\x16\xc3\x9f\x85U\x05\x9a\xd2\xbc25\x1aQ\x8e\xc61\xa5D\xb1m\xd0uL\
	\x99\xa3\xa3\xc4\xc9\xa5\xc1\xec\x1bg\xe1\x89w\x17\xc1\x01\n\xc0\xad\xb8\x95\
	\x12\x91\xb5P\x00E\x15\x18\xb6LdA:\x00&\xa17,AU\x04\x8a-q\t\xb0\x04\x8d\xc5\
	\x12\xa6\x80g\xa0\xce\xefU\x9b\xd7\x05]\x91\xe2\xbei\x949\xe5\n\x80[\xe1L\
	\xa9\x9b\x8fc\x99\x83g\xa1\xa9\xf5:8@\x0348=\xaa\x8b\x84\x81\n\x08U\xa0\xdb\
	\xf4^\x9c\xcf@;D\xcbg\x8d\xb1\xb2bg\xa9\x98\xc8\xa1\xce\x9ax\x02\xceM[\xa6\
	\x8cP!\x94\xf8\xbcj\xf3\xfa\x90;R\x12M\xe3\x04\\\x80\x13P5\x85ce\x1a\xed\xd1\
	\xf4\xc1\x8f$Mm7\x80\x03\xa8\xb0\xdd\xeb\x10\x982/Z\xaa\x82,\xb43\x1f\xc4%0f\
	R\xd6Q\xc5\xe7@\x00\xd6\xacI\xb8\xc8\xe9\x0e\xc0\xcf\xfd\x05j\xf3]\xa5\xeeH \
	\x9a\xc61\x07v\x02NM\xe1X\x85\xc6\xc9h\xfa\xd0\xe9<<{#\xf8\x0e(r\xfb\x1dO\
	\x15d\xf2\xe9w\xba\x152\xa6-\'\xe0\x9d\x05\x01\x00I\xf8\xeb,\xa0\xaa\x02\x05\
	\x08\xa5-\x82\x15\xdaSw\x95\xb9#\x85\xfd\xe9|\xed\xf2\xd1\xe0\xf0\xa8\xb4D<\
	\x1c\xefO\xbf\xd9.y\xfc\x83%\xe0+\x80\x00\xbcX]\xea\x0e\xd9\xf1\x1c\x02p\x97\
	k\x8c\x8e\xe7N\x9d\x84\xeek\x04\xb4\xc1\xbf\x07\x862\x9d\xae\x1a/\x02\xb0\
	\xc7t\x1a\x15\xf0\xf6\xa5\x11s\x1b\x15@\xf1\xa8\xbcW\xe5\xa1\xb5/\xf5f\xbb\
	\xe4\xb1\xf6%\xe0\x00\xf7\xc2\x8e\x8a\x88\xe7\x99\xf0X\xbe2\xaaSaR\xc0\x8c%\
	\x7f\xd5\x97\xbfc}*`\x00\xccIC>\x1f5m\xe9\xf0\xe5\xbfQ\xc6\xe0\xb5\xbe\x85W\
	\xa5\xa5\xdaCKO\xf2\x1fg$\x8fu,\x01\x0f\x81h\x82]\xe5\xe5\xee=\xb7[R\xb1gM\
	\x04 \x96y\xe9\xbb\x9a\xf9\xa0\r\x0e\xce\xef\xbd\xe6>0\t=\xbe\x84\xb92|[A\
	\x83o\xd2\xc017\xa9\x1c\x80\xd3\xabr\xb2\xc6\xcb\xd1\xae\xe4[\xe7$\xdf\xba\
	\xb8\x04|;\xd4\xac\x16\xfc~\xf5\xf2\x82\x9f\xdcc\xd8\xaa5\xa2c\x00Ty8\x930\
	\xd3\xb1\xb4\xb5\xfd4\x0c-\x04u\xbd\x83u\x10\xa8q\x88\xa3\x0f\xac)\xbc=\xd49\
	\x83fI<\x80\xbb\xca\xc3)\xbf\x83\x8f\xa2\x99\xfe\xa2\xcae\xafW\xd4\xd5\x9d0\
	\x85\xe8\x15\x96\x95+\x0c\x87C\x8a\x94\rS\xb1\xab\x0f\x1bc\x97\x1fn\xb0\x93\
	\xae\x8a\x814\xe9\x94E\x060\xca5N:\x84\xdd\x1d\xcb|\xe70\xbczMVo\x14\xc5\x06\
	\x88\x94\xba\x94\xb7\x1f\xa8\xf7\x7f\xb1\xb6;\x89+m\xe1\x01<\x8a@\xa9\xf6\
	\x10\xaf\x0c\xa1WWCi\x19B\xd3P3\x19\x9cC\x83\xf8\xa2Q<\xddq2\t\x83,\x90\x01\
	\xb2\xcb\x0b8\x9a\xb3\xadOb\x99\xdd\xe7\xe0\xd7C ?S\xc0\\&\xc2A\xc1\x9e;\xea\
	\xfc_\xbd\xd7\xb0\xf1\xf4\xa5pKp\x937\'\xa0\x8a\xbc\x03\x1b0%\x18\xe4\x07A\
	\x160|\x0e\x06V\x14\xf0^4\x9d\x18\x9e2\xbew\x11\xf6\r_\x07\x87\xebz`\xf1\x1a\
	\x82t\x06\xf6\xa5\xe2\xb9\xd1\x0b6\xeb\xd5:\xbf7\x14t\xe1JYHS"\xe7\xc1\x8b\
	\xccP\xc0\xaa\xd0\x88.\xf3\xf2\x8eK\x91\xad\x97g\x8f\x0cg\xecG\x8f\xc3\xb1\
	\xe4\x12\x9c[\xfa7\xac\x87`\x10\x9ev\xbb\x94\x9d+k<\xabW\xfb5Q\xe3v\x13P\x14\
	\xdc\xaa\x8a.\x04\xe3R\xd2\xa3\xe7\xe8\xe8\x9bL\x8d\x8f\xebGt\xf8\xed\x15h\
	\x1b\x99;nK\xad\xcf\xf5sZ\x0e\x8e2\xb8\xadX\xd36\x06\x03\x81\xba@qq\xa8\xd0\
	\xe7s\xa52\x99\x99\x89x| >5\xd5\x11\xd5\xf5\x0f\x920}\xd3\x1b\xec\xff\xd3\
	\xfa/\xa4\xb0\x04\x12\xb9d-f\x00\x00\x00\x00IEND\xaeB`\x82' 
	
def getPngDialogCancelBitmap():
	return BitmapFromImage(getPngDialogCancelImage())

def getPngDialogCancelImage():
	stream = cStringIO.StringIO(getPngDialogCancelData())
	return ImageFromStream(stream)


class MainApp(wx.App):
	def OnInit(self):
		frame = MainFrame(None)
		frame.Show(True)
		self.SetTopWindow(frame)
		return True

if __name__ == '__main__':
	app = wx.App()
	frame = MyFrame(None)
	frame.Show()
	app.MainLoop()
